<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.kh.mbtix.admin.model.dao.AdminDao">

	<select id="selectAllUsers" parameterType="com.kh.mbtix.common.model.vo.PageInfo" resultType="com.kh.mbtix.user.model.vo.UserEntity">
        SELECT *
          FROM (
                SELECT ROWNUM AS RNUM, A.*
                  FROM (
                        SELECT 
                               U.USER_ID
                             , U.MBTI_ID
                             , U.LOGIN_ID
                             , U.EMAIL
                             , U.NAME
                             , U.NICKNAME
                             , U.CREATED_AT
                             , U.IS_QUIT
                             , U.POINT
                             , CASE
                                 WHEN B.RELESAE_DATE > SYSDATE THEN '정지'
                                 WHEN U.IS_QUIT = 'Y' THEN '탈퇴'
                                 ELSE '활동중'
                               END AS "statusName"
                             , B.RELESAE_DATE AS "releasaeDate"
                          FROM USERS U
                          LEFT JOIN BANNED_USER B ON U.USER_ID = B.USER_ID
                         ORDER BY U.USER_ID DESC
                       ) A
               )
         WHERE RNUM BETWEEN (#{currentPage} - 1) * #{boardLimit} + 1 AND #{currentPage} * #{boardLimit}
    </select>
    
    <select id="selectListCount" resultType="_int">
    	SELECT COUNT(*)
    	FROM USERS
    </select>
    
    <select id="selectReportListCount" resultType="_int">
    	SELECT COUNT(*)
    	FROM REPORTS
    </select>
    
	<select id="selectAllReports" parameterType="com.kh.mbtix.common.model.vo.PageInfo" resultType="com.kh.mbtix.admin.model.vo.Report">
        SELECT *
          FROM (
                SELECT ROWNUM AS RNUM, A.*
                  FROM (
                        SELECT 
                               R.REPORT_ID
                             , R.USER_ID
                             , R.TARGET_USER_NUM
                             , R.RESON
                             , R.STATUS
                             , R.CREATED_AT
                             , R.PROCESSED_AT
                             , R.REPORT_CATEGORY
                             , U1.LOGIN_ID AS "reporterId"
                             , U2.LOGIN_ID AS "reportedId"
                             , U1.NICKNAME AS "reporterNickname"
                             , U2.NICKNAME AS "reportedNickname"
                             , CASE R.REPORT_CATEGORY
                                    WHEN 1 THEN '욕설 및 어그로'
                                    WHEN 2 THEN '음란 및 선정성'
                                    WHEN 3 THEN '도배 및 광고'
                                    WHEN 4 THEN '혐오성 글 게시'
                                    ELSE '기타'
                               END AS "reportCategoryName"
                          FROM REPORTS R
                          LEFT JOIN USERS U1 ON (R.USER_ID = U1.USER_ID)
                          LEFT JOIN USERS U2 ON (R.TARGET_USER_NUM = U2.USER_ID)
                         ORDER BY R.REPORT_ID DESC
                       ) A
               )
         WHERE RNUM BETWEEN (#{currentPage} - 1) * #{boardLimit} + 1 AND #{currentPage} * #{boardLimit}
    </select>
        
    <select id="selectReport" parameterType="_int" resultType="com.kh.mbtix.admin.model.vo.Report">
    	SELECT
    		 R.REPORT_ID
    	   , R.USER_ID
    	   , R.TARGET_USER_NUM
    	   , R.RESON
    	   , R.STATUS
    	   , R.CREATED_AT
    	   , R.PROCESSED_AT
    	   , R.REPORT_CATEGORY
    	   , U1.LOGIN_ID AS "reporterId"
    	   , U2.LOGIN_ID AS "reportedId"
           , U1.NICKNAME AS "reporterNickname"
           , U2.NICKNAME AS "reportedNickname"
    	   , CASE R.REPORT_CATEGORY
    			WHEN 1 THEN '욕설 및 어그로'
    			WHEN 2 THEN '음란 및 선정성'
    			WHEN 3 THEN '도배 및 광고'
    			WHEN 4 THEN '혐오성 글 게시'
    			ELSE '기타'
    	     END AS "reportCategoryName"
    	FROM REPORTS R
    	LEFT JOIN USERS U1 ON (R.USER_ID = U1.USER_ID)
    	LEFT JOIN USERS U2 ON (R.TARGET_USER_NUM = U2.USER_ID)
    	WHERE R.REPORT_ID = #{reportId}
    </select>
    
    <insert id="banUser" parameterType="com.kh.mbtix.admin.model.vo.BanInfo">
    INSERT INTO BANNED_USER (
        BANNED_ID, 
        USER_ID, 
        RESON, 
        IS_BANNED, 
        PENALTY_DATE, 
        RELESAE_DATE, 
        ADMIN_USER_NUM
    ) VALUES (
        BANNED_USER_SEQ.NEXTVAL,
        #{userId}, 
        #{reson}, 
        'Y', 
        SYSDATE, 
        SYSDATE + #{releasaeDate}, 
        #{adminUserNum} )
	</insert>

    <update id="updateReportStatus" parameterType="_int">
        UPDATE REPORTS
           SET STATUS = 'Y',
               PROCESSED_AT = SYSDATE
         WHERE REPORT_ID = #{reportId}
    </update>
</mapper>